name: Build executables (All platform)

on: [push, pull_request]	

jobs:	
  build:	
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-10.15, windows-2019, ubuntu-18.04]
        #os: [macOS-10.15]
        include: 
        - os: macOS-10.15
          TARGET: macos  
        - os: ubuntu-18.04
          TARGET: linux     
        - os: windows-2019
          TARGET: windows
      # Disable fail-fast; we want results from all OSes even if one fails.
      fail-fast: false

    steps:
    - uses: actions/checkout@v2	
      with:
        path: project
    - uses: actions/checkout@v2	
      with:	
        path: flutter
        repository: flutter/flutter	
        ref: master	
        # Shallow clones don't work; see https://github.com/flutter/flutter/issues/18532
        fetch-depth: 0
    - name: Add Flutter tags
      # Add tags, which are also necessary for version checks to work.
      run: git fetch origin +refs/tags/*:refs/tags/*
      working-directory: ${{ github.workspace }}/flutter
# Windows
    - name: Add Flutter to path - Windows
      if: startsWith(matrix.os, 'windows')
      run: echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
# MacOS/Linux
    - name: Add Flutter to path - macOS/Linux
      if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
      run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
# Linux
    - name: Install Linux dependencies	
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev
# Common
    - name: Enable desktop support	
      run: |
        flutter config --enable-linux-desktop	
        flutter config --enable-macos-desktop	
        flutter config --enable-windows-desktop	
    - name: Doctor
      # Run doctor, for ease of debugging any issues.
      run: flutter doctor -v
    - name: Build hello_word debug
      run: |	
        flutter packages get
        flutter build -v ${{matrix.TARGET}} --debug	
      working-directory: ${{ github.workspace }}/project
    - name: Build hello_word release
      run: |	
        flutter packages get	
        flutter build -v ${{matrix.TARGET}} --release	
      working-directory: ${{ github.workspace }}/project
# Windows
    - name: Copy essentials to Windows artifacs (Debug)
      if: startsWith(matrix.os, 'windows')
      run: |
        cp -Path ${{ github.workspace }}/project/build_dependencies/windows/* ${{ github.workspace }}/project/build/windows/runner/Debug/
        mkdir ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example/flutter_desktop_github_ci_example
        mv -Path ${{ github.workspace }}/project/build/windows/runner/Debug/ ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example/flutter_desktop_github_ci_example
      working-directory: ${{ github.workspace }}/project
    - name: Upload Windows artifaces (Debug)
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v1
      with:
        name: windows-deubg
        path: ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example
    - name: Copy essentials to Windows artifacs (Release)
      if: startsWith(matrix.os, 'windows')
      run: |
        cp -Path ${{ github.workspace }}/project/build_dependencies/windows/* ${{ github.workspace }}/project/build/windows/runner/Release/
        mkdir ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example_release/flutter_desktop_github_ci_example
        mv -Path ${{ github.workspace }}/project/build/windows/runner/Release/ ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example_release/flutter_desktop_github_ci_example
      working-directory: ${{ github.workspace }}/project
    - name: Upload Windows artifaces (Release)
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v1
      with:
        name: windows-release
        path: ${{ github.workspace }}/project/build/windows/runner/flutter_desktop_github_ci_example_release
# Linux
    - name: Copy essentials to Linux artifacs and package (Debug)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cp -r ${{ github.workspace }}/project/build_dependencies/linux ${{ github.workspace }}/project/build/linux/x64/debug/result
        mv ${{ github.workspace }}/project/build/linux/x64/debug/bundle/* ${{ github.workspace }}/project/build/linux/x64/debug/result/usr/local/lib/flutter_desktop_ci_example/
        dpkg-deb --build --root-owner-group ${{ github.workspace }}/project/build/linux/x64/debug/result
      working-directory: ${{ github.workspace }}/project
    - name: Upload Linux artifaces (Debug)
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v1
      with:
        name: linux-debug
        path: ${{ github.workspace }}/project/build/linux/x64/debug/result.deb
    - name: Copy essentials to Linux artifacs and package (Release)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cp -r ${{ github.workspace }}/project/build_dependencies/linux ${{ github.workspace }}/project/build/linux/x64/release/result
        mv ${{ github.workspace }}/project/build/linux/x64/release/bundle/* ${{ github.workspace }}/project/build/linux/x64/release/result/usr/local/lib/flutter_desktop_ci_example/
        dpkg-deb --build --root-owner-group ${{ github.workspace }}/project/build/linux/x64/release/result
      working-directory: ${{ github.workspace }}/project
    - name: Upload Linux artifaces (Release)
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v1
      with:
        name: linux-release
        path: ${{ github.workspace }}/project/build/linux/x64/release/result.deb
# MacOS
    - name: Copy essentials to Macos and package (Debug)
      if: startsWith(matrix.os, 'macOS')
      run: |
        mkdir ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example
        mv ${{ github.workspace }}/project/build/macos/Build/Products/Debug/flutter_desktop_ci_example.app ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example/flutter_desktop_ci_example.app
    - name: Upload MacOS artifaces (Debug)
      if: startsWith(matrix.os, 'macOS')
      uses: actions/upload-artifact@v1
      with:
        name: macos-debug
        path: ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example
    - name: Copy essentials to Macos and package (Release)
      if: startsWith(matrix.os, 'macOS')
      run: |
        mkdir ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example_release
        mv ${{ github.workspace }}/project/build/macos/Build/Products/Release/flutter_desktop_ci_example.app ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example_release/flutter_desktop_ci_example.app
    - name: Upload MacOS artifaces (Release)
      if: startsWith(matrix.os, 'macOS')
      uses: actions/upload-artifact@v1
      with:
        name: macos-release
        path: ${{ github.workspace }}/project/build/macos/Build/Products/flutter_desktop_ci_example_release